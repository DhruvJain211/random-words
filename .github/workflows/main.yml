name: buildapk

on:
  push:
    tags:
      - 'v[0-9]+.*'

jobs:
  create_release:
    permissions: write-all
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  release_assets:
     name: Release assets
     needs: create_release # we need to know the upload URL
     runs-on: ubuntu-latest
     steps:
       # checkout of cource
       - name: Checkout code
         uses: actions/checkout@v1
       - uses: actions/checkout@v3
       - uses: actions/setup-java@v2
         with:
          distribution: 'zulu'
          java-version: '11'
       - uses: subosito/flutter-action@v2
         with:
          flutter-version: '3.0.5'
       - run: flutter pub get
       - run: flutter build apk --split-per-abi
       - run: apt install tree -y
       - run: tree build
       # ... whatever build and packaging steps you need here
       # and finally do an upload!
       - name: Upload release assets
         uses: actions/upload-release-asset@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ needs.create_release.outputs.upload_url }}
           # This is how it will be named on the release page. Put hatever name
           # you like, remember that they need to be different for each platform.
           # You can choose any build matrix parameters. For Rust I use the
           # target triple.
           asset_name: randlike
           asset_path: ./build/app/outputs/apk/release/app-armeabi-v7a-release.apk
           # probably you will need to change it, but most likely you are
           # uploading a binary file
           asset_content_type: application/octet-stream


